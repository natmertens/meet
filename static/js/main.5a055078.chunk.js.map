{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","showDetails","handleShowDetails","setState","this","event","props","className","summary","start","dateTime","location","href","description","onClick","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","NumberOfEvents","placeholder","mockData","kind","etag","status","htmlLink","created","updated","creator","email","self","organizer","timeZone","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","getEvents","NProgress","startsWith","done","getAccessToken","token","url","axios","get","data","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","locationEvents","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.5a055078.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Event extends Component {\r\n\r\n  state = {\r\n    showDetails: false\r\n  }\r\n\r\n  handleShowDetails = () => {\r\n    this.setState({\r\n      showDetails: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    const { showDetails } = this.state;\r\n    const { event } = this.props;\r\n\r\n    return (\r\n      <div className=\"event\">\r\n        {!showDetails\r\n          ? <div className=\"collapsed-view\">\r\n            <h3 className=\"title\">{event.summary}</h3>\r\n            <p className=\"event-start\">{event.start.dateTime}</p>\r\n            <p className=\"location\">{event.location}</p>\r\n            <button className=\"show-details\" onClick={() => this.handleShowDetails()}>Show Details</button>\r\n          </div>\r\n\r\n          : <div className=\"expanded-view\">\r\n            <h3 className=\"title\">{event.summary}</h3>\r\n            <p className=\"event-start\">{event.start.dateTime}</p>\r\n            <p className=\"location\">{event.location}</p>\r\n            <p>About event:</p>\r\n            <p><a href=\"#\">See Details on Google Calendar</a></p>\r\n            <p className=\"description\">{event.description}</p>\r\n            <button className=\"hide-details\">Hide Details</button>\r\n          </div>}\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events } = this.props;\r\n\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {events.map(event =>\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>)}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass CitySearch extends Component {\r\n\r\n  state = {\r\n    query: '',\r\n    suggestions: [],\r\n    showSuggestions: undefined\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    this.setState({\r\n      query: value,\r\n      suggestions\r\n    });\r\n  }\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      showSuggestions: false\r\n    });\r\n\r\n    this.props.updateEvents(suggestion);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n          onFocus={() => { this.setState({ showSuggestions: true }) }} />\r\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li key={suggestion} onClick={() => this.handleItemClicked(suggestion)}>{suggestion}</li>\r\n          ))}\r\n          <li key='all' onClick={() => this.handleItemClicked(\"all\")}>\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\n\r\nclass NumberOfEvents extends Component {\r\n\r\n  state = {\r\n    query: 32\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({\r\n      query: value\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"numberOfEvents\">\r\n        <p>Number of Events:</p>\r\n        <input\r\n          className=\"event-number\"\r\n          value={this.state.query}\r\n          placeholder=\"32\"\r\n          onChange={this.handleInputChanged}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;","const mockData = [\r\n  { kind: \"calendar#event\", etag: \"\\\"3181161784712000\\\"\", id: \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\", status: \"confirmed\", htmlLink: \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\", created: \"2020-05-19T19:17:46.000Z\", updated: \"2020-05-27T12:01:32.356Z\", summary: \"Learn JavaScript\", description: \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\", location: \"London, UK\", creator: { email: \"fullstackwebdev@careerfoundry.com\", self: true }, organizer: { email: \"fullstackwebdev@careerfoundry.com\", self: true }, start: { dateTime: \"2020-05-19T16:00:00+02:00\", timeZone: \"Europe/Berlin\" }, end: { dateTime: \"2020-05-19T17:00:00+02:00\", timeZone: \"Europe/Berlin\" }, recurringEventId: \"4eahs9ghkhrvkld72hogu9ph3e\", originalStartTime: { dateTime: \"2020-05-19T16:00:00+02:00\", timeZone: \"Europe/Berlin\" }, iCalUID: \"4eahs9ghkhrvkld72hogu9ph3e@google.com\", sequence: 0, reminders: { useDefault: true }, eventType: \"default\" },\r\n  { kind: \"calendar#event\", etag: \"\\\"3181159875584000\\\"\", id: \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\", status: \"confirmed\", htmlLink: \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\", created: \"2020-05-19T19:14:30.000Z\", updated: \"2020-05-27T11:45:37.792Z\", summary: \"React is Fun\", description: \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \", location: \"Berlin, Germany\", creator: { email: \"fullstackwebdev@careerfoundry.com\", self: true }, organizer: { email: \"fullstackwebdev@careerfoundry.com\", self: true }, start: { dateTime: \"2020-05-20T14:00:00+02:00\", timeZone: \"Europe/Berlin\" }, end: { dateTime: \"2020-05-20T15:00:00+02:00\", timeZone: \"Europe/Berlin\" }, recurringEventId: \"3qtd6uscq4tsi6gc7nmmtpqlct\", originalStartTime: { dateTime: \"2020-05-20T14:00:00+02:00\", timeZone: \"Europe/Berlin\" }, iCalUID: \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\", sequence: 0, reminders: { useDefault: true }, eventType: \"default\" }\r\n];\r\n\r\nexport { mockData }","import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event => event.location));\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\n/*remove code from URL once finished*/\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      '//' +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState('', '', newurl);\r\n  } else {\r\n    newurl = window.location.protocol + '//' + window.location.host;\r\n    window.history.pushState('', '', newurl);\r\n  }\r\n};\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    'https://ka5f0solz1.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem('access_token', access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n  /*check for an aceess token*/\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    /*GET request to events endpoint*/\r\n    removeQuery();\r\n    const url = 'https://ka5f0solz1.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem('access_token');\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get('code');\r\n    if (!code) {\r\n      const results = await axios.get(\r\n        'https://ka5f0solz1.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url'\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents, extractLocations } from './api';\nimport './nprogress.css';\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    locations: []\n  }\n\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}